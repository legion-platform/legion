{{- if .Values.service_catalog.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-service-catalog"
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "legion.helm-labels" (dict "component" "service-catalog" "root" .) | nindent 4 }}
spec:
  replicas: {{ .Values.service_catalog.replicas }}
  selector:
    matchLabels:
      {{- include "legion.helm-labels-for-search" (dict "component" "service-catalog" "root" .) | nindent 6 }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        {{- include "legion.helm-labels" (dict "component" "service-catalog" "root" .) | nindent 8 }}
    spec:
      {{- if .Values.rbac}}
      serviceAccountName: "{{ .Release.Name }}-service-catalog"
      {{- end}}
      volumes:
        - name: config
          secret:
            secretName: "{{ .Release.Name }}-service-catalog-config"
      containers:
      - name: service-catalog
        image: "{{ include "legion.image-name" (dict "root" . "service" .Values.service_catalog "tpl" "%sservice-catalog:%s") }}"
        resources:
          {{- toYaml .Values.service_catalog.resources | nindent 10 }}
        volumeMounts:
          - name: config
            mountPath: "/etc/legion"
            readOnly: true
        command:
          - ./service-catalog
        args:
          - --config
          - /etc/legion/config.yaml
        ports:
          - containerPort: 5000
            name: api
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 120
          timeoutSeconds: 8
          failureThreshold: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-service-catalog"
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "legion.helm-labels" (dict "component" "service-catalog" "root" .) | nindent 4 }}
spec:
  selector:
    {{- include "legion.helm-labels-for-search" (dict "component" "service-catalog" "root" .) | nindent 4 }}
  ports:
  - name: api
    targetPort: 5000
    port: 5000
    protocol: TCP
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-service-catalog-config"
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "legion.helm-labels" (dict "component" "service-catalog" "root" .) | nindent 4 }}
data:
  "config.yaml": |
    {{ toYaml .Values.config | b64enc }}