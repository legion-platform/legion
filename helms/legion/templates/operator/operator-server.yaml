apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}-operator"
  labels:
    component: "legion-operator"
    {{- include "legion.helm-labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.operator.server.replicas }}
  selector:
    matchLabels:
      component: "legion-operator"
      {{- include "legion.helm-labels-for-search" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: "legion-operator"
        {{- include "legion.helm-labels" . | nindent 8 }}
    spec:
      {{- if .Values.rbac }}
      serviceAccountName: "{{ .Release.Name }}-operator"
      {{- end }}
      containers:
      - image: "{{ include "legion.image-name" (dict "root" . "service" .Values.operator.server "tpl" "%sk8s-operator:%s") }}"
        imagePullPolicy: Always
        name: manager
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: BUILDER_IMAGE
            value: "{{ include "legion.image-name" (dict "root" . "service" .Values.operator.builder "tpl" "%sk8s-model-builder:%s") }}"
          - name: BUILDER_SERVICE_ACCOUNT
            value: "{{ .Release.Name }}-model-builder"
          - name: PYTHON_TOOLCHAIN_IMAGE
            value: "{{ include "legion.image-name" (dict "root" . "service" .Values.toolchains.python "tpl" "%spython-toolchain:%s") }}"
          - name: BUILD_IMAGE_PREFIX
            value: {{ .Values.modelStorage.buildPrefix | quote }}
          - name: DOCKER_REGISTRY
            value: {{ .Values.modelStorage.external.url | quote }}
          - name: DOCKER_REGISTRY_USER
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-operator-config"
                key: docker.registry.user
          - name: DOCKER_REGISTRY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-operator-config"
                key: docker.registry.password
          - name: MODEL_TRAIN_METRICS_ENABLED
            value: "{{ .Values.modelMetrics.enabled }}"
          - name: METRICS_HOST
            value: {{ .Values.modelMetrics.host | quote }}
          - name: METRICS_PORT
            value: {{ .Values.modelMetrics.port | quote }}
        resources:
          {{- toYaml .Values.operator.server.resources | nindent 10 }}
        ports:
        - containerPort: 7777
          name: metrics
          protocol: TCP
---
apiVersion: v1
kind: Secret
metadata:
  name: "{{ .Release.Name }}-operator-config"
  labels:
    component: "legion-operator"
    {{- include "legion.helm-labels" . | nindent 4 }}
data:
  docker.registry.user: {{ .Values.modelStorage.external.user | b64enc | quote }}
  docker.registry.password: {{ .Values.modelStorage.external.password | b64enc | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-operator"
  labels:
    component: "legion-operator"
    {{- include "legion.helm-labels" . | nindent 4 }}
spec:
  selector:
    component: "legion-operator"
    {{- include "legion.helm-labels-for-search" . | nindent 4 }}
  ports:
  - name: metrics
    targetPort: 7777
    port: 7777
    protocol: TCP