apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    {{- include "legion.helm-labels" (dict "component" "operator" "root" .) | nindent 4 }}
    controller-tools.k8s.io: "1.0"
  name: modeldeployments.legion.legion-platform.org
  annotations:
    "helm.sh/hook": "crd-install"
spec:
  additionalPrinterColumns:
  - JSONPath: .status.state
    name: State
    type: string
  - JSONPath: .spec.image
    name: Model image
    type: string
  - JSONPath: .status.serviceURL
    name: Service URL
    type: string
  - JSONPath: .status.availableReplicas
    name: Available Replicas
    type: string
  group: legion.legion-platform.org
  names:
    kind: ModelDeployment
    plural: modeldeployments
    shortNames:
    - md
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            annotations:
              description: Annotations for model pods.
              type: object
            image:
              description: Model Docker image
              type: string
            imagePullConnID:
              description: If pulling of your image requires authorization, then you
                should specify the connection id
              type: string
            livenessProbeInitialDelay:
              description: Initial delay for liveness probe of model pod
              format: int32
              type: integer
            maxReplicas:
              description: Maximum number of pods for model. By default the max replicas
                parameter equals 1.
              format: int32
              type: integer
            minReplicas:
              description: Minimum number of pods for model. By default the min replicas
                parameter equals 0.
              format: int32
              type: integer
            readinessProbeInitialDelay:
              description: Initial delay for readiness probe of model pod
              format: int32
              type: integer
            resources:
              description: Resources for model deployment The same format like k8s
                uses for pod resources.
              properties:
                limits:
                  description: Limits describes the maximum amount of compute resources
                    allowed.
                  properties:
                    cpu:
                      description: Read more about CPU resource here https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-cpu
                      type: string
                    gpu:
                      description: Read more about GPU resource here https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/#using-device-plugins
                      type: string
                    memory:
                      description: Read more about memory resource here https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-memory
                      type: string
                  type: object
                requests:
                  description: Requests describes the minimum amount of compute resources
                    required.
                  properties:
                    cpu:
                      description: Read more about CPU resource here https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-cpu
                      type: string
                    gpu:
                      description: Read more about GPU resource here https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/#using-device-plugins
                      type: string
                    memory:
                      description: Read more about memory resource here https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-memory
                      type: string
                  type: object
              type: object
            roleName:
              description: Initial delay for readiness probe of model pod
              type: string
          required:
          - image
          type: object
        status:
          properties:
            availableReplicas:
              description: Number of available pods
              format: int32
              type: integer
            deployment:
              description: The model k8s deployment name
              type: string
            lastRevisionName:
              description: Last applied ready knative revision
              type: string
            lastUpdatedTime:
              description: Time when credentials was updated
              format: date-time
              type: string
            replicas:
              description: Expected number of pods under current load
              format: int32
              type: integer
            service:
              description: The model k8s service name
              type: string
            serviceURL:
              description: The model k8s service name
              type: string
            state:
              description: The state of a model deployment.   "Processing" - A model
                was not deployed. Because some parameters of the                  custom
                resource are wrong. For example, there is not a model                  image
                in a Docker registry.   "Ready" - A model was deployed successfully.
              type: string
          required:
          - availableReplicas
          - replicas
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
