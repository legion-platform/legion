apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    {{- include "legion.helm-labels" (dict "component" "operator" "root" .) | nindent 4 }}
    controller-tools.k8s.io: "1.0"
  name: modeltrainings.legion.legion-platform.org
  annotations:
    "helm.sh/hook": "crd-install"
spec:
  additionalPrinterColumns:
  - JSONPath: .status.state
    name: Status
    type: string
  - JSONPath: .spec.toolchain
    name: Toolchain
    type: string
  - JSONPath: .spec.vcsName
    name: VCS name
    type: string
  - JSONPath: .status.modelName
    name: Model name
    type: string
  - JSONPath: .status.modelVersion
    name: Model version
    type: string
  - JSONPath: .status.modelImage
    name: Model image
    type: string
  group: legion.legion-platform.org
  names:
    kind: ModelTraining
    plural: modeltrainings
    shortNames:
    - mt
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            args:
              items:
                type: string
              type: array
            data:
              description: Input data for a training
              items:
                properties:
                  connName:
                    description: Connection name for data
                    type: string
                  localPath:
                    description: Local training path
                    type: string
                  remotePath:
                    description: Overwrite remote data path in connection
                    type: string
                required:
                - connName
                - localPath
                type: object
              type: array
            entrypoint:
              description: Model training file. It can be python\bash script or jupiter
                notebook
              type: string
            envs:
              description: Custom environment variables that should be set before
                entrypoint invocation.
              items:
                properties:
                  name:
                    description: Name of an environment variable
                    type: string
                  value:
                    description: Value of an environment variable
                    type: string
                required:
                - name
                - value
                type: object
              type: array
            hyperParameters:
              description: Model training hyperParameters in parameter:value format
              type: object
            image:
              description: Train image
              type: string
            model:
              description: Model Identity
              properties:
                artifactNameTemplate:
                  description: Template of output artifact name
                  type: string
                name:
                  description: Model name
                  type: string
                version:
                  description: Model version
                  type: string
              required:
              - name
              - version
              type: object
            reference:
              description: VCS Reference
              type: string
            resources:
              description: Resources for model container The same format like k8s
                uses for pod resources.
              properties:
                limits:
                  description: Limits describes the maximum amount of compute resources
                    allowed.
                  properties:
                    cpu:
                      description: Read more about CPU resource here https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-cpu
                      type: string
                    gpu:
                      description: Read more about GPU resource here https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/#using-device-plugins
                      type: string
                    memory:
                      description: Read more about memory resource here https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-memory
                      type: string
                  type: object
                requests:
                  description: Requests describes the minimum amount of compute resources
                    required.
                  properties:
                    cpu:
                      description: Read more about CPU resource here https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-cpu
                      type: string
                    gpu:
                      description: Read more about GPU resource here https://kubernetes.io/docs/tasks/manage-gpus/scheduling-gpus/#using-device-plugins
                      type: string
                    memory:
                      description: Read more about memory resource here https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#meaning-of-memory
                      type: string
                  type: object
              type: object
            toolchain:
              description: IntegrationName of toolchain
              type: string
            vcsName:
              description: Name of Connection resource. Must exists
              type: string
            workDir:
              description: Directory with model scripts/files in a git repository
              type: string
          required:
          - model
          - toolchain
          - entrypoint
          - vcsName
          type: object
        status:
          properties:
            artifacts:
              description: List of training results
              items:
                properties:
                  artifactName:
                    description: Trained artifact name
                    type: string
                  commitID:
                    description: VCS commit
                    type: string
                  runId:
                    description: Mlflow run ID
                    type: string
                required:
                - runId
                - artifactName
                - commitID
                type: object
              type: array
            exitCode:
              description: Pod exit code
              format: int32
              type: integer
            message:
              description: Pod last log
              type: string
            reason:
              description: Pod reason
              type: string
            state:
              description: Model Packaging State
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
