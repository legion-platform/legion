{{ if .Values.feedback.enabled -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}-fluentd-config"
  labels:
    component: "legion-fluentd"
    {{- include "legion.helm-labels" . | nindent 4 }}
data:
  fluent.conf: |
    <source>
      @type forward
      port {{ .Values.feedback.fluentd.port }}
      bind 0.0.0.0
    </source>

    # Add time as a regular field
    <filter *>
      @type record_transformer
      <record>
        time ${time}
      </record>
    </filter>

    {{- if .Values.feedback.output }}
    {{- if eq .Values.feedback.output.target "s3"}}
    # S3 output
    <match *>
      @type s3

      {{- if eq .Values.feedback.output.s3.authorization "secret" }}
      # Auth based on secrets from HELM configuration
      # Secrets are attached as secretKeyRefs from "{{ .Release.Name }}-fluentd-secret" secret
      aws_key_id "#{ENV['AWS_ACCESS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SECRET_ACCESS_KEY']}"
      {{- end }}
      {{- if eq .Values.feedback.output.s3.authorization "iam" }}
      # IAM based authorization does not require any configuration
      #  it only appends appropriate annotation for IAM service to FluentD pod
      {{- end }}

      # Connection
      s3_bucket {{ required "S3 bucket values is required" .Values.feedback.output.s3.bucket }}
      s3_region {{ required "S3 region values is required" .Values.feedback.output.s3.region }}

      # Storing
      path {{ .Values.feedback.output.s3.path }}
      s3_object_key_format {{ .Values.feedback.output.s3.objectKeyFormat }}
      time_slice_format {{ .Values.feedback.output.s3.timeSliceFormat }}
      time_slice_wait {{ .Values.feedback.output.s3.timeSliceWait }}
      utc
      store_as {{ .Values.feedback.output.s3.storeAs }}

      # Buffering
      <buffer tag,time,model_id,model_version>
        @type file
        path {{ .Values.feedback.output.s3.buffering.path }}/default
        timekey {{ .Values.feedback.output.s3.buffering.timekey }}
        timekey_wait {{ .Values.feedback.output.s3.buffering.timekeyWait }}
        timekey_use_utc true
      </buffer>

      # Formatting
      <format>
        @type {{ .Values.feedback.output.s3.format }}
      </format>
    </match>
    {{- end }}
    {{- end }}
{{- end }}