{{ if .Values.feedback.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-fluentd"
  labels:
    component: "legion-fluentd"
    {{- include "legion.helm-labels" . | nindent 4 }}
spec:
  # FluentD is limited to 1 replica to avoid data overwriting
  replicas: 1
  selector:
    matchLabels:
      component: "legion-fluentd"
      {{- include "legion.helm-labels-for-search" . | nindent 6 }}
  template:
    metadata:
      {{- if and (eq .Values.feedback.output.target "s3") (eq .Values.feedback.output.s3.authorization "iam" ) }}
      annotations:
        iam.amazonaws.com/role: {{ ternary $.Values.feedback.output.s3.customIAMRole (printf "%s-%s-collector-role" $.Values.ingress.globalDomain $.Release.Namespace) (hasKey $.Values.feedback.output.s3 "customIAMRole") }}
      {{- end }}
      labels:
        component: "legion-fluentd"
        {{- include "legion.helm-labels" . | nindent 8 }}
    spec:
      containers:
      - name: fluentd
        image: "{{ include "legion.image-name" (dict "root" . "service" .Values.feedback.fluentd "tpl" "%sk8s-fluentd:%s") }}"
        resources:
          {{- toYaml .Values.feedback.fluentd.resources | nindent 10 }}
        env:
        # File load data from
        - name: FLUENTD_ARGS
          value: -c /opt/fluent-config/fluent.conf
        # Auth on external storage systems
        {{- if eq .Values.feedback.output.target "s3" }}
        {{- if eq .Values.feedback.output.s3.authorization "secret" }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-fluentd-secret"
              key: AWSKeyID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-fluentd-secret"
              key: AWSSecretKey
        {{- end }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.feedback.fluentd.port }}
          name: input
          protocol: TCP
        - containerPort: {{ .Values.feedback.fluentd.port }}
          name: input-udp
          protocol: UDP
        volumeMounts:
        - name: fluentd-config
          mountPath: /opt/fluent-config
      volumes:
      - name: fluentd-config
        configMap:
          name: "{{ .Release.Name }}-fluentd-config"
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-fluentd"
  labels:
    component: "legion-fluentd"
    {{- include "legion.helm-labels" . | nindent 4 }}
spec:
  selector:
    component: "legion-fluentd"
    {{- include "legion.helm-labels-for-search" . | nindent 4 }}
  ports:
  - name: input
    port: {{ .Values.feedback.fluentd.port }}
    targetPort: {{ .Values.feedback.fluentd.port }}
    protocol: TCP
  - name: input-udp
    port: {{ .Values.feedback.fluentd.port }}
    targetPort: {{ .Values.feedback.fluentd.port }}
    protocol: UDP
{{- end }}