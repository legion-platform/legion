{{- if .Values.edge.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-edge"
  labels:
    component: "legion-edge"
    {{- include "legion.helm-labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.edge.replicas }}
  selector:
    matchLabels:
      component: "legion-edge"
      {{- include "legion.helm-labels-for-search" . | nindent 6 }}
  template:
    metadata:
      labels:
        component: "legion-edge"
        {{- include "legion.helm-labels" . | nindent 8 }}
    spec:
      serviceAccountName: "{{ .Release.Name }}-edge"
      {{- if .Values.feedback.enabled }}
      volumes:
      - name: edge-scripts
        configMap:
          name: "{{ .Release.Name }}-edge-scripts"
      {{- end }}
      containers:
      - name: nginx
        image: "{{ include "legion.image-name" (dict "root" . "service" .Values.edge "tpl" "%sk8s-edge:%s") }}"
        resources:
          requests:
            cpu: {{ .Values.edge.resources.requests.cpu | quote }}
            memory: {{ .Values.edge.resources.requests.memory | quote }}
          limits:
            cpu: {{ .Values.edge.resources.limits.cpu | quote }}
            memory: {{ .Values.edge.resources.limits.memory | quote }}
        env:
        - name: POD_UUID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        {{- if .Values.feedback.enabled }}
        - name: FEEDBACK_ENABLED
          value: "true"
        - name: FLUENTD_HOST
          value: "127.0.0.1"
        - name: FLUENTD_PORT
          value: "24224"
        {{- else }}
        - name: FEEDBACK_ENABLED
          value: "false"
        {{- end }}
        {{- if .Values.modelApiSecurity.enabled }}
        - name: JWT_ENABLED
          value: "true"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-jwt-config"
              key: "jwt.secret"
        {{- else -}}
        - name: JWT_ENABLED
          value: "false"
        {{- end }}
        ports:
        - containerPort: 80
          name: api
          protocol: TCP
        - containerPort: 7777
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 20
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
      {{- if .Values.feedback.enabled }}
      - name: logger
        image: "fluent/fluent-bit:0.14"
        command: ["bash"]
        args:
          - /opt/edge-scripts/start-fluentbit.sh
        env:
        - name: EXTERNAL_FLUENTD_HOST
          value: "{{ .Release.Name }}-fluentd"
        - name: EXTERNAL_FLUENTD_PORT
          value: {{ .Values.feedback.fluentd.port | quote }}
        - name: FLUENTD_CONFIG
          value: "/opt/edge-scripts/fluentd-config.config"
        volumeMounts:
        - name: edge-scripts
          mountPath: /opt/edge-scripts
      {{- end }}
      - name: dns
        image: "janeczku/go-dnsmasq:release-1.0.7"
        args:
          - --listen
          - "127.0.0.1:53"
          - --default-resolver
          - --append-search-domains
          - --hostsfile=/etc/hosts
          - --verbose
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "nslookup $(hostname) $(hostname)"
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-edge"
  labels:
    component: "legion-edge"
    {{- include "legion.helm-labels" . | nindent 4 }}
spec:
  selector:
    component: "legion-edge"
    {{- include "legion.helm-labels-for-search" . | nindent 4 }}
  ports:
  - name: api
    targetPort: 80
    port: {{ .Values.edge.port }}
    protocol: TCP
  - name: metrics
    port: 7777
    protocol: TCP
{{- if .Values.feedback.enabled }}
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}-edge-scripts"
  labels:
    component: "legion-edge"
    {{- include "legion.helm-labels" . | nindent 4 }}
data:
  fluentd-config.config: |-
    [INPUT]
        Name                forward
        Listen              0.0.0.0
        Port                24224
        Buffer_Max_Size     2Mb
        Buffer_Chunk_Size   2Kb

    [OUTPUT]
        Name                forward
        Match               *
        Host                ${EXTERNAL_FLUENTD_HOST}
        Port                ${EXTERNAL_FLUENTD_PORT}
  start-fluentbit.sh: |-
    #!/bin/sh
    /fluent-bit/bin/fluent-bit -c $FLUENTD_CONFIG
{{- end }}
{{- end }}
