apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
    {{- include "legion.helm-labels" . | nindent 4 }}
  name: modeltrainings.legion.legion-platform.org
spec:
  additionalPrinterColumns:
  - JSONPath: .status.state
    name: Status
    type: string
  - JSONPath: .spec.toolchain
    name: Toolchain
    type: string
  - JSONPath: .spec.vcsName
    name: VCS name
    type: string
  - JSONPath: .status.id
    name: ID
    type: string
  - JSONPath: .status.version
    name: Version
    type: string
  - JSONPath: .status.modelImage
    name: Model image
    type: string
  group: legion.legion-platform.org
  names:
    kind: ModelTraining
    plural: modeltrainings
    shortNames:
    - mt
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            args:
              items:
                type: string
              type: array
            entrypoint:
              description: Model training file. It can be python\bash script or jupiter
                notebook
              type: string
            env:
              description: Custom environment variables that should be setted before
                entrypoint invocation. In ENVname:value format
              type: object
            hyperparameters:
              description: Model training hyperparameters in parameter:value format
              type: object
            image:
              description: Train image
              type: string
            modelFile:
              description: Model file
              type: string
            reference:
              description: VCS Reference
              type: string
            resources:
              description: Resources for model container The same format like k8s
                uses for pod resources.
              type: object
            toolchain:
              description: Type of toolchain. Currently supports only python.
              enum:
              - python
              - jupyter
              type: string
            vcsName:
              description: Name of VCSCredential resource. Must exists
              type: string
          required:
          - toolchain
          - entrypoint
          - vcsName
          type: object
        status:
          properties:
            exitCode:
              format: int32
              type: integer
            id:
              type: string
            message:
              type: string
            modelImage:
              type: string
            podName:
              type: string
            reason:
              type: string
            state:
              enum:
              - scheduling
              - fetching-code
              - running
              - capturing
              - succeeded
              - failed
              - unknown
              type: string
            version:
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
