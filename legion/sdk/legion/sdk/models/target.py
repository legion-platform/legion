# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from legion.sdk.models.base_model_ import Model
from legion.sdk.models import util


class Target(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, connection_name: str=None, name: str=None):  # noqa: E501
        """Target - a model defined in Swagger

        :param connection_name: The connection_name of this Target.  # noqa: E501
        :type connection_name: str
        :param name: The name of this Target.  # noqa: E501
        :type name: str
        """
        self.swagger_types = {
            'connection_name': str,
            'name': str
        }

        self.attribute_map = {
            'connection_name': 'connectionName',
            'name': 'name'
        }

        self._connection_name = connection_name
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'Target':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Target of this Target.  # noqa: E501
        :rtype: Target
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_name(self) -> str:
        """Gets the connection_name of this Target.


        :return: The connection_name of this Target.
        :rtype: str
        """
        return self._connection_name

    @connection_name.setter
    def connection_name(self, connection_name: str):
        """Sets the connection_name of this Target.


        :param connection_name: The connection_name of this Target.
        :type connection_name: str
        """

        self._connection_name = connection_name

    @property
    def name(self) -> str:
        """Gets the name of this Target.


        :return: The name of this Target.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Target.


        :param name: The name of this Target.
        :type name: str
        """

        self._name = name
