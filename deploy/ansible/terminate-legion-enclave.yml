---
##################
# Install Legion Enclave
##################

# NOTICE:
# You Must specify the next variables as extra vars (--extra-vars "XXXX=YYYY") 
# profile - unique cluster name
# enclave_name - enclave name to deploy

- hosts: localhost
  connection: local
  gather_facts: True
  vars_files:
    - "{{ lookup('env', 'PROFILES_PATH') or '../profiles' }}/{{ profile }}.yml"

  pre_tasks:
    - name: Download secrets from S3
      aws_s3:
        bucket: "{{ secrets_bucket }}"
        object: "vault/{{ profile }}"
        dest: "{{ secrets_file }}"
        mode: get

    - name: Include vars
      include_vars:
        file: "{{ secrets_file }}"

  post_tasks:
    - name: Delete secrets file
      file:
        name: "{{ secrets_file }}"
        state: absent

  tasks:
  - name: Configure kubectl using kops
    shell: "kops export kubecfg --name {{ cluster_name }} --state {{ state_store }}"
  
  - name: Remove legion chart
    shell: helm --kube-context {{ cluster_name }} delete --purge legion-{{ enclave_name }}
    ignore_errors: true

  - name: Remove airflow chart
    shell: helm --kube-context {{ cluster_name }} delete --purge airflow-{{ enclave_name }}
    ignore_errors: true
  
  - name: "Remove {{ enclave_name }} namespace"
    shell: "kubectl --context {{ cluster_name }} delete namespace {{ enclave_name }} --ignore-not-found=true --grace-period=10"
  
  - name: "Check that {{ enclave_name }} namespace has been removed"
    shell: "kubectl --context {{ cluster_name }} get namespace {{ enclave_name }}"
    register: namespace_check
    until: namespace_check.stderr.find(' not found') != -1
    retries: 5
    delay: 10
    ignore_errors: true
  
  - name: WORKAROUND delete pods in phase terminating
    shell: kubectl --context {{ cluster_name }} --namespace {{ enclave_name }}  delete --grace-period=0 --force po $(kubectl --context {{ cluster_name }} --namespace {{ enclave_name }} get po -o wide | grep Terminating | awk '{ print $1 }') || true

  - name: Remove Airflow S3 access policy
    iam_policy:
      iam_type: role
      iam_name: "{{ cluster_name }}-{{ enclave_name }}-airflow-role"
      policy_name: "{{ cluster_name }}-{{ enclave_name }}-airflow-s3-access-policy"
      state: absent
 
  - name: Remove enclave Airflow IAM role
    iam_role:
      name: "{{ cluster_name }}-{{ enclave_name }}-airflow-role"
      state: absent