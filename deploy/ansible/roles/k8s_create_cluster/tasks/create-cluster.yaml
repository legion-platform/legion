---
####################
# Create Kubernetes cluster using Kops
####################

- name: Create kops configuration
  template:
    src: kops.yaml.j2
    dest: "{{ tmp_dir }}/kops.{{ cluster_name }}.yaml"
    mode: 0644

- name: Configure the cluster
  shell: "kops create -f {{ tmp_dir }}/kops.{{ cluster_name }}.yaml --state {{ state_store }}"

- name: Create ssh public key file
  copy:
    content: "{{ cluster_ssh_public_key }}"
    dest: "{{ cluster_ssh_public_key_path }}"

- name: Configure ssh key
  shell: "kops create secret --name {{ cluster_name }} sshpublickey admin -i  {{ cluster_ssh_public_key_path }} --state {{ state_store }}"

- name: Create the physical cluster
  shell: "kops update cluster {{ cluster_name }} --yes --state {{ state_store }}"


# HOTFIX: fix SSL check failure on ap ELB
- name: Get Kube API ELB name
  shell: "aws --region {{ aws_region }} elb describe-load-balancers --output text --query 'LoadBalancerDescriptions[*].[LoadBalancerName]' |grep api-{{ env_name }}-epm | tr -d '\n'"
  register: kubeapi_elb
  until: kubeapi_elb.stdout.find('api-') != -1
  retries: 10
  delay: 15

- name: Update API ELB healthcheck
  shell: "aws --region {{ aws_region }} elb configure-health-check --load-balancer-name {{ kubeapi_elb.stdout }} --health-check Target=TCP:443,Interval=10,UnhealthyThreshold=2,HealthyThreshold=2,Timeout=5"


- name: Verify that all Kubernetes nodes are ready
  shell: kubectl --context {{ cluster_name }} get nodes | grep master | wc -l
  register: cmd_result
  until: cmd_result.stdout == "{{ k8s_master_zones|length }}"
  retries: 20
  delay: 60
