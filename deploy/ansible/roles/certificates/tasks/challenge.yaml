- name: initiate the Let's Encrypt challenge
  letsencrypt:
    acme_directory: "{{ tls_acme_url }}"
    acme_version: 2
    validate_certs: "{{ ler52_acme_certificate_check }}"
    challenge: dns-01
    account_key: "{{ tls_account_key_dir }}/{{ tls_account_key_file_name }}"
    csr: "{{ tls_new_cert_dir }}/{{ tls_csr_file_name }}"
    dest: "{{ tls_new_cert_dir }}/{{ tls_cert_file_name }}"
    fullchain_dest: "{{ tls_new_cert_dir }}/{{ tls_fullchain_file_name }}"
    account_email: "{{ tls_account_email }}"
    remaining_days: "{{ tls_cert_remaining_days_before_renewal }}"
    terms_agreed: true
    agreement: "{{ tls_agreement | default(omit) }}"
  register: lets_encrypt_challenge
  connection: local

- name: create the DNS TXT records for the challenge
  route53:
    command: create
    zone: "{{ tls_route_53_domain }}"
    record: "{{ item.key }}"
    type: TXT
    ttl: 5
    value: "{{ item.value | map('regex_replace', '^(.*)$', '\"\\1\"' ) | list }}"
    overwrite: yes
    wait: yes
  with_dict: "{{ lets_encrypt_challenge['challenge_data_dns'] | default({}) }}"
  when: lets_encrypt_challenge is changed
  connection: local

- name: Wait for DNS changes propagation
  shell: sleep 30

- name: validate the Let's Encrypt challenge
  letsencrypt:
    acme_directory: "{{ tls_acme_url }}"
    acme_version: 2
    validate_certs: "{{ ler52_acme_certificate_check }}"
    challenge: dns-01
    account_key: "{{ tls_account_key_dir }}/{{ tls_account_key_file_name }}"
    csr: "{{ tls_new_cert_dir }}/{{ tls_csr_file_name }}"
    dest: "{{ tls_new_cert_dir }}/{{ tls_cert_file_name }}"
    fullchain_dest: "{{ tls_new_cert_dir }}/{{ tls_fullchain_file_name }}"
    account_email: "{{ tls_account_email }}"
    data: "{{ lets_encrypt_challenge }}"
  connection: local

- name: delete the DNS records for the challenge
  route53:
    command: delete
    zone: "{{ tls_route_53_domain }}"
    record: "{{ item.key }}"
    type: TXT
    ttl: 5
    value: "{{ item.value | map('regex_replace', '^(.*)$', '\"\\1\"' ) | list }}"
  with_dict: "{{ lets_encrypt_challenge['challenge_data_dns'] | default({}) }}"
  connection: local