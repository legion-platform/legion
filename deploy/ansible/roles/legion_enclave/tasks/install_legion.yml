---

- name: Get legion chart status
  shell: helm --kube-context {{ cluster_name }} ls --all legion-{{ enclave }}
  register: legion_deployment_status

- set_fact:
    "legion_deployed": "{{ legion_deployment_status.stdout_lines|length > 1 }}"

- name: Remove legion chart
  shell: helm --kube-context {{ cluster_name }} delete --purge legion-{{ enclave }}
  when: "legion_deployed"

- name: WORKAROUND delete pods in phase terminating
  shell: kubectl --context {{ cluster_name }} --namespace {{ enclave }}  delete --grace-period=0 --force po $(kubectl --context {{ cluster_name }} --namespace {{ enclave }} get po -o wide | grep Terminating | awk '{ print $1 }') || true
  when: "legion_deployed"

- name: Update dependencies of legion chart
  shell: helm --kube-context {{ cluster_name }} dependency update
  args:
    chdir: ../helms/legion

- name: Create legion configuration (values) file
  template:
    src: legion-values.yaml.j2
    dest: "{{ tmp_dir }}/legion-values.{{ cluster_name }}.yaml"
    mode: 0644
  vars:
    git_secret_name: legion-git-deploy

- name: Pre run with dumping
  shell: "helm --kube-context {{ cluster_name }} install legion --name legion-{{ enclave }} --namespace {{ enclave }} --debug --dry-run -f  {{ tmp_dir }}/legion-values.{{ cluster_name }}.yaml"
  register: helm_legion_install_output
  args:
    chdir: ../helms

- name: Save pre run result
  copy:
    content: "{{ helm_legion_install_output.stdout }}"
    dest: "{{ tmp_dir }}/helm.legion_{{ enclave }}.{{ cluster_name }}.debug"

- name: Install legion chart
  shell: "helm --kube-context {{ cluster_name }} install legion --name legion-{{ enclave }} --namespace {{ enclave }} --wait --timeout 600 -f  {{ tmp_dir }}/legion-values.{{ cluster_name }}.yaml"
  args:
    chdir: ../helms

- name: Dump current HELM status
  shell: "helm --kube-context {{ cluster_name }} status legion-{{ enclave }}"
  register: helm_legion_status_output

- name: Save HELM status localy
  copy:
    content: "{{ helm_legion_status_output.stdout }}"
    dest: "{{ tmp_dir }}/helm.legion_{{ enclave }}.{{ cluster_name }}.status"


