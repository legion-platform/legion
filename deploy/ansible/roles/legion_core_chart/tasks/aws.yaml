---

# Create Jenkins IAM role for airflow s3 access
- name: Generate trust policy document
  template:
    src: "trust_policy.yaml.j2"
    dest: "{{ tmp_dir }}/trust_policy.{{ enclave }}.{{ cluster_name }}.yaml"
  with_items: "{{ enclaves }}"
  loop_control:
    loop_var: enclave

- name: Generate jenkins s3 access policy document
  template:
    src: "jenkins_s3_access_policy.yaml.j2"
    dest: "{{ tmp_dir }}/jenkins_s3_access_policy.{{ enclave }}.{{ cluster_name }}.yaml"
  with_items: "{{ enclaves }}"
  loop_control:
    loop_var: enclave

- name: Create Jenkins S3 access role
  iam:
    iam_type: role
    name: "{{ cluster_name }}-jenkins-role"
    trust_policy_filepath: "{{ tmp_dir }}/trust_policy.{{ enclave }}.{{ cluster_name }}.yaml"
    state: present
  retries: 10
  delay: 5
  with_items: "{{ enclaves }}"
  loop_control:
    loop_var: enclave

- name: Attach Jenkins S3 accesse policy to the role
  iam_policy:
    iam_type: role
    iam_name: "{{ cluster_name }}-jenkins-role"
    policy_name: "{{ cluster_name }}-jenkins-airflow-s3-access-policy"
    policy_document: "{{ tmp_dir }}/jenkins_s3_access_policy.{{ enclave }}.{{ cluster_name }}.yaml"
    state: present
  retries: 10
  delay: 5
  with_items: "{{ enclaves }}"
  loop_control:
    loop_var: enclave

# Install Legion core chart
- name: Get jenkins volume info
  ec2_vol:
    state: list
    region: "{{ aws_region }}"
    name: "jenkins_home_{{ profile }}"
    zone: "{{ cluster_zones.0.zone_name }}"
    tags:
      App: "jenkins_home_{{ cluster_name }}"
  register: ec2_jenkins_vol
  tags: jenkins_volume
  when: persistent_jenkins_volume