---

####################
# Install Ingress
####################

# Deploy ingress and default backend

- name: Create Ingress configuration
  template:
    src: "{{ item }}.yml.j2"
    dest: "{{ tmp_dir }}/{{ item }}.{{ cluster_name }}.yml"
    mode: 0644
  with_items:
    - ingress-mandatory
    - ingress-aws

- name: Deploy nginx-ingress mandatory components
  shell: |
    kubectl --context {{ cluster_name }} apply -f {{ tmp_dir }}/ingress-mandatory.{{ cluster_name }}.yml

- name: Deploy aws ingress
  shell: |
    kubectl --context {{ cluster_name }} apply -f {{ tmp_dir }}/ingress-aws.{{ cluster_name }}.yml

- name: "Set namespace label"
  shell: kubectl --context {{ cluster_name }} label ns ingress-nginx k8s-component=ingress --overwrite

- name: Get Ingress ELB endpoint
  shell: kubectl --context {{ cluster_name }} describe services ingress-nginx --namespace ingress-nginx |grep .elb.amazonaws.com| awk '{ print $3 }'
  register: ingress_elb_endpoint
  until: ingress_elb_endpoint.stdout.find(".elb.amazonaws.com") != -1
  retries: 6
  delay: 10

- name: Create ingress DNS record
  route53:
    state: present
    zone: "{{ route53_zone }}"
    record: "*.{{ base_domain }}"
    type: CNAME
    ttl: 60
    value: "{{ ingress_elb_endpoint.stdout }}"
    overwrite: true
