{{- if .Values.edge.enabled }}
apiVersion: v1
kind: ReplicationController
metadata:
  name: "{{ .Release.Name }}-edge"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-edge"
spec:
  replicas: {{ .Values.edge.replicas }}
  selector:
    component: "{{ .Release.Name }}-edge"
  template:
    metadata:
      labels:
        component: "{{ .Release.Name }}-edge"
    spec:
      serviceAccountName: "{{ .Release.Name }}-edge"
      containers:
      - name: nginx
        image: "{{ .Values.edge.image.repository }}:{{ .Values.edge.image.tag }}"
        imagePullPolicy: "{{ .Values.edge.image.pullPolicy }}"
        env:
        - name: STATSD_HOST
          value: "{{ .Release.Name }}-graphite.{{ .Release.Namespace }}.svc.{{ .Values.localDomain }}"
        - name: STATSD_PORT
          value: "8125"
        ports:
        - containerPort: 80
          name: api
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 3
      - name: dns
        image: "janeczku/go-dnsmasq:release-1.0.7"
        args:
          - --listen
          - "127.0.0.1:53"
          - --default-resolver
          - --append-search-domains
          - --hostsfile=/etc/hosts
          - --verbose
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "nslookup $(hostname) $(hostname)"
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-edge"
  labels:
    component: "{{ .Release.Name }}-edge"
    legion.system: "yes"
    legion.component: "edge"
spec:
  selector:
    component: "{{ .Release.Name }}-edge"
  ports:
  - name: api
    port: 80
    protocol: TCP
---
{{- if .Values.edge.ingress.enabled -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
  {{- range $key, $value := .Values.edge.ingress.annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-edge"
    legion.system: "yes"
    legion.component: "edge"
  name: "{{ .Release.Name }}-edge"
spec:
  rules:
    - host: "{{ .Values.edge.ingress.domain.partial }}{{ .Values.domainDelimiter }}{{ .Values.rootDomain }}"
      http:
        paths:
          - backend:
              serviceName: "{{ .Release.Name }}-edge"
              servicePort: 80
    {{- if .Values.addLocalDomain }}
    - host: "{{ .Values.edge.ingress.domain.partial }}.local.{{ .Values.rootDomain }}"
      http:
        paths:
          - backend:
              serviceName: "{{ .Release.Name }}-edge"
              servicePort: 80
    {{- end }}
  {{- if .Values.edge.ingress.tls.enabled }}
  tls:
  - hosts:
    - "{{ .Values.edge.ingress.domain.partial }}{{ .Values.domainDelimiter }}{{ .Values.rootDomain }}"
    {{- if .Values.edge.ingress.tls.autoSecretNameDeduction }}
    secretName: "{{ .Values.rootDomain }}-tls"
    {{- else }}
    secretName: {{ .Values.edge.ingress.tls.secretName  }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}
