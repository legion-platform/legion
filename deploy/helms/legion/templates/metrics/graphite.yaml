{{- if .Values.graphite.enabled }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}-graphite-config"
data:
  config.js: |-
    {
      "graphiteHost": "127.0.0.1",
      "graphitePort": 2003,
      "debug": true,
      "dumpMessages": true,
      "port": 8125,
      "flushInterval": 10000,
      "percentThreshold": [50, 90, 95, 99],
      "servers": [
          { server: "./servers/udp", address: "0.0.0.0", port: 8125 }
      ],
      "histogram": [
        {
            metric: 'request.time',
            bins: [ 5, 10, 50, 100, 200, 400, 'inf']
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-graphite"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-graphite"
    legion.system: "yes"
    legion.component: "graphite"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: "{{ .Release.Name }}-graphite"
  template:
    metadata:
      labels:
        component: "{{ .Release.Name }}-graphite"
    spec:
      volumes:
        - name: config
          configMap:
            name: "{{ .Release.Name }}-graphite-config"
      containers:
      - name: graphite
        image: "{{ .Values.graphite.image.repository }}:{{ .Values.graphite.image.tag }}"
        resources:
          requests:
            cpu: "50m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "512Mi"
        volumeMounts:
        - mountPath: /opt/statsd/config.js
          name: config
          subPath: config.js
        ports:
        - containerPort: 80
          name: api
          protocol: TCP
        - containerPort: 2003
          name: carbon-reciever
          protocol: TCP
        - containerPort: 8126
          name: statsd-admin
          protocol: TCP
        - containerPort: 8125
          name: statsd
          protocol: UDP
        livenessProbe:
          initialDelaySeconds: 100
          timeoutSeconds: 10
          httpGet:
            path: /
            port: 80
        livenessProbe:
          initialDelaySeconds: 100
          timeoutSeconds: 10
          tcpSocket:
            port: 2003
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-graphite"
  labels:
    component: "{{ .Release.Name }}-graphite"
    legion.system: "yes"
    legion.component: "graphite"
spec:
  selector:
    component: "{{ .Release.Name }}-graphite"
  ports:
  - name: api
    port: 80
    protocol: TCP
  - name: carbon-reciever
    port: 2003
    protocol: TCP
  - name: statsd-admin
    port: 8126
    protocol: TCP
  - name: statsd
    port: 8125
    protocol: UDP
{{- end }}
