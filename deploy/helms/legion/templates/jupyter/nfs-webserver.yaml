{{- if .Values.jupyterhub.nfs.enabled }}
{{- if .Values.jupyterhub.nfs.ingress.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-jupyterhub-nfs-web-config"
  labels:
    app: "{{ .Release.Name }}-jupyterhub-nfs-web-config"
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
data:
  default.conf: |-
    server {
        listen   80;
            server_name  localhost;
            root /usr/share/nginx/html;
            location / {
                index none;
                autoindex on;
                autoindex_exact_size off;
                autoindex_localtime on;
        }
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-jupyterhub-nfs-web"
  labels:
    app: "{{ .Release.Name }}-jupyterhub-nfs-web"
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-jupyterhub-nfs-web"
    spec:
      containers:
      - name: web
        image: nginx
        ports:
          - containerPort: {{ .Values.jupyterhub.nfs.port }}
        volumeMounts:
          - name: nfs
            mountPath: "/usr/share/nginx/html"
          - name: config-volume
            mountPath: "/etc/nginx/conf.d/"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 120
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 120
          periodSeconds: 3
      volumes:
        - name: nfs
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-jupyterhub-nfs"
        - name: config-volume
          configMap:
            name: "{{ .Release.Name }}-jupyterhub-nfs-web-config"
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "{{ .Release.Name }}-nfs"
  labels:
    app: "{{ .Release.Name }}-nfs"
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    {{- range $key, $value := .Values.jupyterhub.nfs.ingress.annotations }}
      {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  rules:
    - host: "{{ .Values.jupyterhub.nfs.ingress.domain.partial }}{{ .Values.domainDelimiter }}{{ .Values.rootDomain }}"
      http:
        paths:
          - path: /
            backend:
              serviceName: "{{ .Release.Name }}-jupyterhub-nfs-web"
              servicePort: {{ .Values.jupyterhub.nfs.port }}
  {{- if .Values.jupyterhub.nfs.ingress.tls.enabled }}
  tls:
  - hosts:
    - "{{ .Values.jupyterhub.nfs.ingress.domain.partial }}{{ .Values.domainDelimiter }}{{ .Values.rootDomain }}"
    {{- if .Values.jupyterhub.nfs.ingress.tls.autoSecretNameDeduction }}
    secretName: "{{ .Values.rootDomain }}-tls"
    {{- else }}
    secretName: {{ .Values.jupyterhub.nfs.ingress.tls.secretName  }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}
