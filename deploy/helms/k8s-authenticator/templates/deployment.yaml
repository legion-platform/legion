apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "k8s-authenticator.fullname" . }}
  labels:
    app: {{ template "k8s-authenticator.name" . }}
    chart: {{ template "k8s-authenticator.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "k8s-authenticator.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "k8s-authenticator.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-nginx
          image: nginx:stable
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          volumeMounts:
{{- range .Values.ca }}
            - name: {{ template "k8s-authenticator.fullname" $ }}-{{ .name }}
              subPath: {{ .name }}
              mountPath: /usr/share/nginx/html/certs/{{ .filename }}
{{- end }}

        - name: {{ .Chart.Name }}-auth
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: [ "--config", "config.yaml" ]
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
          volumeMounts:
            - name: config
              subPath: config.yaml
              mountPath: /app/config.yaml
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "k8s-authenticator.fullname" . }}
{{- range .Values.ca }}
        - name: {{ template "k8s-authenticator.fullname" $ }}-{{ .name }}
          secret:
            secretName: {{ template "k8s-authenticator.fullname" $ }}-{{ .name }}
{{- end }}
