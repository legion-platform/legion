apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-scheduler"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-scheduler"
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: "{{ .Values.clusterName }}-{{ .Values.enclave }}-airflow-role"
      labels:
        app: "{{ .Release.Name }}-airflow-scheduler"
    spec:
      restartPolicy: Always
      containers:
      - name: scheduler
        image: "{{ .Values.image }}"
        resources:
          requests:
            cpu: "1000m"
            memory: "1024Mi"
          limits:
            cpu: "2000m"
            memory: "2048Mi"
        env:
        - name: POSTGRES_HOST
        {{- if .Values.postgres.external}}
          value: "{{ .Values.postgres.host }}"
        {{- else }}
          value: "{{ .Release.Name }}-postgres"
        {{- end }}
        - name: POSTGRES_PORT
          value: "{{ .Values.postgres.port }}"
        - name: REDIS_HOST
          value: "{{ .Release.Name }}-redis"
        - name: AIRFLOW_HOME
          value: "/home/airflow"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - 'ps x |grep "[a]irflow scheduler"'
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 3
        volumeMounts:
        - name: airflow-config
          mountPath: /home/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: dag-volume
          mountPath: "{{ .Values.storage.airflow_dags_directory }}"
        - name: airflow-config-dir
          mountPath: /home/airflow/config
        args: ["airflow", "scheduler"]
      volumes:
      - name: airflow-config-dir
        configMap:
          name: "{{ .Release.Name }}-log-config"
      - name: airflow-config
        secret:
          secretName: "{{ .Release.Name }}-config"
          items:
          - key: airflow.cfg
            path: airflow.cfg
      - name: dag-volume
        persistentVolumeClaim:
          {{- if .Values.storage.use_specified_pvc }}
          claimName: {{ .Values.storage.pvc_name }}
          {{- else}}
          claimName: "{{ .Release.Name }}-dag-pvc"
          {{- end}}

