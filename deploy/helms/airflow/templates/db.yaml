{{- if not .Values.postgres.external }}
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-postgres"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-postgres"
spec:
  selector:
    app: "{{ .Release.Name }}-airflow-db"
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-postgres"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-postgres"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-airflow-db"
    spec:
      containers:
      - name: postgres
        image: "postgres:10@sha256:41f013d3153c03345d04ae362b2ce4b60f4a1687f260aafd74f75461e5e5be8d"
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
        ports:
        - name: postgres
          containerPort: 5432
        env:
         - name: POSTGRES_USER
           value: "{{ .Values.secrets.postgres.user }}"
         - name: POSTGRES_PASSWORD
           value: "{{ .Values.secrets.postgres.password }}"
         - name: POSTGRES_DB
           value: "{{ .Values.secrets.postgres.db }}"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $(hostname)
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 5
{{- end }}
